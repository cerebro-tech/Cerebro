#!/usr/bin/env bash
set -euo pipefail

DISK="/dev/nvme0n1"
DISK2="/dev/sda"
USERNAME="j"
PASSWORD="\\\" 

echo "==> 0. Enabling NTP"
timedatectl set-ntp true

echo "==> 1. Secure erase + setting the block size to 4KB"
nvme format -f --ses=1 --lbaf=1 $DISK

echo "==> 2. Partitioning"
sgdisk -n1:0:+981M -t1:EF00 "$DISK"
sgdisk -n2:0:+32G -t2:8304 "$DISK"
sgdisk -n3:0:+16G -t3:8300 "$DISK"
sgdisk -n4:0:+64G -t4:8300 "$DISK"
sgdisk -n5:0:+32G -t5:8300 "$DISK"
sgdisk -n6:0:0 -t6:8300 "$DISK"

echo "==> 3. Formatting partitions"
mkfs.fat -F 32 -s 8 -S 512 -n BOOT ${DISK}p1
mkfs.f2fs -l ROOT -f -t 0 -O extra_attr,compression ${DISK}p2  # -C lz4:4 - not works
mkfs.xfs -L LIBCACHE -f ${DISK}p3
mkfs.xfs -L GAMES -f ${DISK}p4
mkfs.xfs -L VIDEO -f ${DISK}p5
mkfs.xfs -L DATA -f ${DISK}p6

echo "==>3. Mounting partitions"
mount -t f2fs -o defaults,noatime,nodiscard,compress_algorithm=lz4,compress_level=4,compress_chksum,fastboot ${DISK}p2 /mnt
mkdir -p /mnt/{boot,var/lib,games,video,data}
mount -t vfat -o defaults,noatime "${DISK}p1" /mnt/boot
mount -t xfs -o defaults,noatime,logbsize=64k "${DISK}p3" /mnt/var/libcache

echo "==>4. Generating fstab"
genfstab -L /mnt >> /mnt/etc/fstab

echo "==>5. Installing base system + packages"
pacstrap /mnt \
  base base-devel linux linux-headers \
  xfsprogs dosfstools efibootmgr sudo nano zsh \
  intel-ucode nvidia-dkms nvidia-utils \
  networkmanager ly \
  gnome-shell gnome-control-center gnome-tweaks gnome-console gnome-system-monitor gnome-text-editor nautilus \
  pipewire pipewire-alsa pipewire-jack pipewire-pulse wireplumber \
  xdg-desktop-portal-gnome \
  xorg xorg-xinit xorg-xwayland \
  ccache mold ninja --noconfirm --needed

echo "==>6. Chroot and configure the system ==="
arch-chroot /mnt /bin/bash <<CHROOT_EOF
set -euo pipefail

curl -s https://raw.githubusercontent.com/cerebro-tech/Cerebro/main/makepkg.conf > /etc/makepkg.conf
curl -s https://raw.githubusercontent.com/cerebro-tech/Cerebro/main/pacman.conf > /etc/pacman.conf

echo "cerebro" > /etc/hostname
useradd -m -G wheel,audio,video,storage,network,power -s /bin/zsh "$USERNAME"
echo "$USERNAME:$PASSWORD" | chpasswd

mkdir -p "/home/$USERNAME"
chown "$USERNAME:$USERNAME" "/home/$USERNAME"
chmod 700 "/home/$USERNAME"

mkdir -p /etc/sudoers.d
echo "%wheel ALL=(ALL:ALL) ALL" > /etc/sudoers.d/10-wheel
chmod 440 /etc/sudoers.d/10-wheel
visudo -c || true

echo "==>7. Initramfs Customization"
sed -i 's/^HOOKS=.*/HOOKS=(base udev autodetect microcode modconf block filesystems keyboard)/' /etc/mkinitcpio.conf
sed -i 's/^#COMPRESSION=.*/COMPRESSION="lz4"/' /etc/mkinitcpio.conf
sed -i 's/^#COMPRESSION_OPTIONS=.*/COMPRESSION_OPTIONS=(-4)/' /etc/mkinitcpio.conf

echo "==>8. Generate Initramfs for all kernels"
mkinitcpio -P

echo "==>9. Systemd tuning"
sed -i 's/^#DefaultTimeoutStartSec=.*/DefaultTimeoutStartSec=7s/' /etc/systemd/system.conf
sed -i 's/^#DefaultTimeoutStopSec=.*/DefaultTimeoutStopSec=7s/' /etc/systemd/system.conf
systemctl disable systemd-networkd-wait-online.service 2>/dev/null || true

echo "==>10. Boot entry creating"
efibootmgr -c -d $DISK -p 1 -L "Cerebro Arch" \
    -l /vmlinuz-linux \
    -u "root=LABEL=ROOT rw rootfstype=f2fs rootflags=compress_algorithm=lz4,compress_chksum quiet loglevel=3 initrd=\initramfs-linux.img"

systemctl enable NetworkManager ly.service || true

echo "==>11. Chroot configuration done"
CHROOT_EOF

echo "==> 12. Finalize & cleanup"
umount -R /mnt || true

echo "Installation finished."
echo "- Consider adding kernel cmdline options (via firmware/efibootmgr):"
echo "- quiet loglevel=3 rd.systemd.show_status=auto rd.udev.log_level=3 vt.global_cursor_default=0"
echo "Reboot when ready."
