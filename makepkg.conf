# /etc/makepkg.conf
#
# Uses aggressive optimizations, parallel builds, and RAM for temporary files.

#########################################################################
#                                                                       #
#                           General Settings                            #
#                                                                       #
#########################################################################

# Specify download agents for various protocols. curl is standard and efficient.
DLAGENTS=('file::/usr/bin/curl -gqC - -o %o %u'
          'ftp::/usr/bin/curl -gqfC - --ftp-pasv --retry 3 --retry-delay 3 -o %o %u'
          'http::/usr/bin/curl -L -f -q -o %o %u'
          'https::/usr/bin/curl -L -f -q -o %o %u'
          'rsync::/usr/bin/rsync --no-motd -z %u %o'
          'scp::/usr/bin/scp -C %u %o')

# Version control clients for packages from AUR.
VCSCLIENTS=('bzr::breezy'
            'fossil::fossil'
            'git::git'
            'hg::mercurial'
            'svn::subversion')

# Architecture and toolchain settings. x86_64 is standard for modern Arch.
CARCH="x86_64"
CHOST="x86_64-pc-linux-gnu"

#########################################################################
#                                                                       #
#                      Compiler Flags (Optimized)                       #
#                                                                       #
#########################################################################

# Aggressive flags for performance, including native instruction set, O3, and LTO.
CFLAGS="-march=native -O3 -pipe -fno-plt -flto=auto -fomit-frame-pointer \
        -Wp,-D_FORTIFY_SOURCE=3 -Wformat -Werror=format-security \
        -fstack-clash-protection -fcf-protection -ftree-vectorize"
CXXFLAGS="$CFLAGS -Wp,-D_GLIBCXX_ASSERTIONS"

# LTO and linker settings. Uses 'mold' for speed and enables modern linker features.
LDFLAGS="-Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now \
         -Wl,-z,pack-relative-relocs -fuse-ld=mold -Wl,--threads=$(nproc)"
LTOFLAGS="-flto=auto"

# Debugging flags for when debug symbols are needed.
DEBUG_CFLAGS="-g"
DEBUG_CXXFLAGS="$DEBUG_CFLAGS"

#########################################################################
#                                                                       #
#                     Build and Automation Settings                     #
#                                                                       #
#########################################################################

# Parallel jobs for 'make' and 'ninja'. Avoids oversubscription with -l$(nproc).
MAKEFLAGS="-j$(nproc) -l$(nproc)"
export NINJAFLAGS="-j$(nproc)"

# Time-stamping builds for reproducibility.
SOURCE_DATE_EPOCH="$(date +%s)"
export SOURCE_DATE_EPOCH

# Build environment settings. `ccache` and parallel builds are enabled.
BUILDENV=(!distcc color ccache check !sign)

# Makepkg build options. `lto` is crucial for LTO builds. `strip` is standard.
OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge !debug lto)

# Integrity check algorithms. sha256 is the standard.
INTEGRITY_CHECK=(sha256)

# Stripping options to reduce binary sizes.
STRIP_BINARIES="--strip-all"
STRIP_SHARED="--strip-unneeded"
STRIP_STATIC="--strip-debug"

# Directories to handle for man and documentation cleanup.
MAN_DIRS=({usr{,/local}{,/share},opt/*}/{man,info})
DOC_DIRS=(usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc})
PURGE_TARGETS=(usr/{,share}/info/dir .packlist *.pod)
DBGSRCDIR="/usr/src/debug"
LIB_DIRS=('lib:usr/lib' 'lib32:usr/lib32')

#########################################################################
#                                                                       #
#                        Compression and Storage                        #
#                                                                       #
#########################################################################

# Build directory in tmpfs (RAM) for maximum speed.
# The `paru` and `makepkg` build processes will use this directory.
BUILDDIR="/tmp/makepkg"

# Package destination on NVMe for persistence and easy management.
PKGDEST="/data/builds"

# Compression commands.
COMPRESSZST=(zstd -c -T0 --auto-threads=logical)
COMPRESSLZ4=(lz4 -l -c -B4 -)
COMPRESSGZ=(pigz -c -f -n)
COMPRESSBZ2=(pbzip2 -c -f)
COMPRESSXZ=(xz -c -z -)
COMPRESSLRZ=(lrzip -q)
COMPRESSZ=(compress -c -f)
COMPRESSLZ=(lzip -c -f)
COMPRESSLZO=(lzop -1 -q)

# Package compression settings. LZ4 is used for speed, ZSTD is the standard.
# PKGEXT controls the extension of the final package.
PKGEXT='.pkg.tar.lz4'
SRCEXT='.src.tar.zst'
